{
    "openapi": "3.0.2",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/device/health/readiness": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Readiness",
                "description": "Readiness health endpoint.\n\nInspects sqlalchemy engine and check if workflow table exists.\n\nReturns\n-------\n    Status docstring\n\nRaises\n------\nHTTPException\n    500: Workflow table not found",
                "operationId": "readiness_api_v1_device_health_readiness_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/device/": {
            "get": {
                "tags": [
                    "devices"
                ],
                "summary": "Get Devices",
                "description": "Get all devices endpoint.\n\nReturns\n-------\n    List of device pydantic output models",
                "operationId": "get_devices_api_v1_device__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Devices Api V1 Device  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DeviceOut"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "devices"
                ],
                "summary": "Create Device",
                "description": "Create new device endpoint.\n\nParameters\n----------\npayload\n    Device pydantic base model\n\nReturns\n-------\n    Device pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful",
                "operationId": "create_device_api_v1_device__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseDevice"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/device/{device_id}": {
            "get": {
                "tags": [
                    "devices"
                ],
                "summary": "Get Device",
                "description": "Get device endpoint.\n\nParameters\n----------\ndevice_id\n    Id of requested device\n\nReturns\n-------\n    Device pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "get_device_api_v1_device__device_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Device Id",
                            "type": "integer"
                        },
                        "name": "device_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "devices"
                ],
                "summary": "Update Device",
                "description": "Update device endpoint.\n\nParameters\n----------\ndevice_id\n    Id of device to be updated\npayload\n    New device pydantic base model, contains new data\n\nReturns\n-------\n    Updated device pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "update_device_api_v1_device__device_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Device Id",
                            "type": "integer"
                        },
                        "name": "device_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseDevice"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "devices"
                ],
                "summary": "Delete Device",
                "description": "Delete device endpoint.\n\nParameters\n----------\ndevice_id\n    Id of device to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "delete_device_api_v1_device__device_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Device Id",
                            "type": "integer"
                        },
                        "name": "device_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BaseDevice": {
                "title": "BaseDevice",
                "required": [
                    "name",
                    "manufacturer",
                    "modality",
                    "status",
                    "ip_address"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "manufacturer": {
                        "title": "Manufacturer",
                        "type": "string"
                    },
                    "modality": {
                        "title": "Modality",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "site": {
                        "title": "Site",
                        "type": "string"
                    },
                    "ip_address": {
                        "title": "Ip Address",
                        "type": "string"
                    }
                },
                "description": "Device pydantic base model."
            },
            "DeviceOut": {
                "title": "DeviceOut",
                "required": [
                    "name",
                    "manufacturer",
                    "modality",
                    "status",
                    "ip_address",
                    "id",
                    "datetime_created"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "manufacturer": {
                        "title": "Manufacturer",
                        "type": "string"
                    },
                    "modality": {
                        "title": "Modality",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "site": {
                        "title": "Site",
                        "type": "string"
                    },
                    "ip_address": {
                        "title": "Ip Address",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "datetime_created": {
                        "title": "Datetime Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_updated": {
                        "title": "Datetime Updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "Device pydantic output model."
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            }
        }
    }
}