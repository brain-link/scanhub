{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/api/v1/exam/health/readiness":{"get":{"tags":["health"],"summary":"Readiness","description":"Get status / health endpoint.","operationId":"readiness_api_v1_exam_health_readiness_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/api/v1/exam/new":{"post":{"tags":["exams"],"summary":"Create Exam","description":"Create a new exam.\n\nParameters\n----------\npayload\n    Exam pydantic input model.\n\nReturns\n-------\n    Exam pydantic output moddel.\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_exam_api_v1_exam_new_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseExam"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExamOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/":{"post":{"tags":["exams"],"summary":"Create Exam From Template","description":"Create a new exam from template.\n\nParameters\n----------\npayload\n    The potentially modified exam to create.\ntemplate_id\n    ID of the template, the exam is created from\n\nReturns\n-------\n    Exam pydantic output model.\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_exam_from_template_api_v1_exam__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"template_id","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Template Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseExam"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExamOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/{exam_id}":{"get":{"tags":["exams"],"summary":"Get Exam","description":"Get exam endpoint.\n\nParameters\n----------\nexam_id\n    Id of requested exam entry\n\nReturns\n-------\n    Exam pydantic output model.\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"get_exam_api_v1_exam__exam_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"exam_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Exam Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExamOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["exams"],"summary":"Exam Delete","description":"Delete an exam by id. Cascade deletes the associated workflow and tasks.\n\nParameters\n----------\nexam_id\n    Id of the exam to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"exam_delete_api_v1_exam__exam_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"exam_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Exam Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["exams"],"summary":"Update Exam","description":"Update an existing exam.\n\nParameters\n----------\nexam_id\n    Id of the exam to be updated\npayload\n    Exam pydantic input model\n\nReturns\n-------\n    Exam pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"update_exam_api_v1_exam__exam_id__put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"exam_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Exam Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseExam"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExamOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/all/{patient_id}":{"get":{"tags":["exams"],"summary":"Get All Patient Exams","description":"Get all exams of a certain patient.\n\nParameters\n----------\npatient_id\n    Id of parent\n\nReturns\n-------\n    List of exam pydantic output models","operationId":"get_all_patient_exams_api_v1_exam_all__patient_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"patient_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Patient Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ExamOut"},"title":"Response Get All Patient Exams Api V1 Exam All  Patient Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/templates/all":{"get":{"tags":["exams"],"summary":"Get All Exam Templates","description":"Get all exam templates.\n\nReturns\n-------\n    List of exam pydantic output models","operationId":"get_all_exam_templates_api_v1_exam_templates_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ExamOut"},"type":"array","title":"Response Get All Exam Templates Api V1 Exam Templates All Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/workflow/new":{"post":{"tags":["workflows"],"summary":"Create Workflow","description":"Create new workflow.\n\nParameters\n----------\npayload\n    Workflow pydantic input model\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_workflow_api_v1_exam_workflow_new_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseWorkflow"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/workflow":{"post":{"tags":["workflows"],"summary":"Create Workflow From Template","description":"Create new workflow from template.\n\nParameters\n----------\nexam_id\n    Id of the exam, the workflow is related to\ntemplate_id\n    ID of the template, the workflow is created from\nnew_workflow_is_template\n    set the is_template property of the new workflow and its tasks\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_workflow_from_template_api_v1_exam_workflow_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"exam_id","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Exam Id"}},{"name":"template_id","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Template Id"}},{"name":"new_workflow_is_template","in":"query","required":true,"schema":{"type":"boolean","title":"New Workflow Is Template"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/workflow/{workflow_id}":{"get":{"tags":["workflows"],"summary":"Get Workflow","description":"Get a workflow.\n\nParameters\n----------\nworkflow_id\n    Id of the workflow to be returned\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"get_workflow_api_v1_exam_workflow__workflow_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Workflow Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["workflows"],"summary":"Delete Workflow","description":"Delete a workflow. Cascade delete the associated tasks.\n\nParameters\n----------\nworkflow_id\n    Id of the workflow to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"delete_workflow_api_v1_exam_workflow__workflow_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Workflow Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["workflows"],"summary":"Update Workflow","description":"Update an existing workflow.\n\nParameters\n----------\nworkflow_id\n    Id of the workflow to be updated\npayload\n    Workflow pydantic indput model\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"update_workflow_api_v1_exam_workflow__workflow_id__put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Workflow Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseWorkflow"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/workflow/all/{exam_id}":{"get":{"tags":["workflows"],"summary":"Get All Exam Workflows","description":"Get all existing workflows of a certain exam.\n\nParameters\n----------\nexam_id\n    Id of parent exam\n\nReturns\n-------\n    List of workflow pydantic output model","operationId":"get_all_exam_workflows_api_v1_exam_workflow_all__exam_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"exam_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Exam Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WorkflowOut"},"title":"Response Get All Exam Workflows Api V1 Exam Workflow All  Exam Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/workflow/templates/all":{"get":{"tags":["workflows"],"summary":"Get All Workflow Templates","description":"Get all workflow templates.\n\nReturns\n-------\n    List of workflow pydantic output model","operationId":"get_all_workflow_templates_api_v1_exam_workflow_templates_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/WorkflowOut"},"type":"array","title":"Response Get All Workflow Templates Api V1 Exam Workflow Templates All Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/task/new":{"post":{"tags":["tasks"],"summary":"Create Task","description":"Create a new task.\n\nParameters\n----------\npayload\n    Task pydantic input model\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_task_api_v1_exam_task_new_post","requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/BaseAcquisitionTask"},{"$ref":"#/components/schemas/BaseDAGTask"}],"title":"Payload","discriminator":{"propertyName":"task_type","mapping":{"ACQUISITION":"#/components/schemas/BaseAcquisitionTask","DAG":"#/components/schemas/BaseDAGTask"}}}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/AcquisitionTaskOut"},{"$ref":"#/components/schemas/DAGTaskOut"}],"title":"Response Create Task Api V1 Exam Task New Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/task":{"post":{"tags":["tasks"],"summary":"Create Task From Template","description":"Create a new task from template.\n\nParameters\n----------\nworkflow_id\n    ID of the workflow, the task is related to\ntemplate_id\n    ID of the template, the task is created from\nnew_task_is_template\n    set the is_template property on the new task\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_task_from_template_api_v1_exam_task_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"workflow_id","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Workflow Id"}},{"name":"template_id","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Template Id"}},{"name":"new_task_is_template","in":"query","required":true,"schema":{"type":"boolean","title":"New Task Is Template"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/AcquisitionTaskOut"},{"$ref":"#/components/schemas/DAGTaskOut"}],"title":"Response Create Task From Template Api V1 Exam Task Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/task/{task_id}":{"get":{"tags":["tasks"],"summary":"Get Task","description":"Get an existing task.\n\nParameters\n----------\ntask_id\n    Id of the task to be returned\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"get_task_api_v1_exam_task__task_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"task_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/AcquisitionTaskOut"},{"$ref":"#/components/schemas/DAGTaskOut"}],"title":"Response Get Task Api V1 Exam Task  Task Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["tasks"],"summary":"Delete Task","description":"Delete a task.\n\nParameters\n----------\ntask_id\n    Id of the task to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"delete_task_api_v1_exam_task__task_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"task_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Task Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["tasks"],"summary":"Update Task","description":"Update an existing task.\n\nParameters\n----------\ntask_id\n    Id of the workflow to be updated\npayload\n    Task pydantic base model\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"update_task_api_v1_exam_task__task_id__put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"task_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Task Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/BaseAcquisitionTask"},{"$ref":"#/components/schemas/BaseDAGTask"}],"discriminator":{"propertyName":"task_type","mapping":{"ACQUISITION":"#/components/schemas/BaseAcquisitionTask","DAG":"#/components/schemas/BaseDAGTask"}},"title":"Payload"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/AcquisitionTaskOut"},{"$ref":"#/components/schemas/DAGTaskOut"}],"title":"Response Update Task Api V1 Exam Task  Task Id  Put"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/task/all/{workflow_id}":{"get":{"tags":["tasks"],"summary":"Get All Workflow Tasks","description":"Get all existing tasks of a certain workflow.\n\nParameters\n----------\nworkflow_id\n    Id of parental workflow\n\nReturns\n-------\n    List of task pydantic output model","operationId":"get_all_workflow_tasks_api_v1_exam_task_all__workflow_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Workflow Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/AcquisitionTaskOut"},{"$ref":"#/components/schemas/DAGTaskOut"}]},"title":"Response Get All Workflow Tasks Api V1 Exam Task All  Workflow Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/task/templates/all":{"get":{"tags":["tasks"],"summary":"Get All Task Templates","description":"Get all existing task templates.\n\nReturns\n-------\n    List of task pydantic output model","operationId":"get_all_task_templates_api_v1_exam_task_templates_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"anyOf":[{"$ref":"#/components/schemas/AcquisitionTaskOut"},{"$ref":"#/components/schemas/DAGTaskOut"}]},"type":"array","title":"Response Get All Task Templates Api V1 Exam Task Templates All Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/result":{"post":{"tags":["results"],"summary":"Create Blank Result","description":"Create a task result.\n\nParameters\n----------\npayload\n    Result pydantic input model\n\nReturns\n-------\n    Result pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_blank_result_api_v1_exam_result_post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"task_id","in":"query","required":true,"schema":{"anyOf":[{"type":"string"},{"type":"string","format":"uuid"}],"title":"Task Id"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/result/{result_id}":{"get":{"tags":["results"],"summary":"Get Result","description":"Get an existing result.\n\nParameters\n----------\nresult_id\n    Id of the result to be returned\n\nReturns\n-------\n    Result pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"get_result_api_v1_exam_result__result_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"result_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Result Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["results"],"summary":"Delete Result","description":"Delete a task.\n\nParameters\n----------\ntask_id\n    Id of the task to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"delete_result_api_v1_exam_result__result_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"result_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Result Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["results"],"summary":"Set Result","description":"Update an existing result.\n\nParameters\n----------\nresult_id\n    Id of the result to be updated\npayload\n    Result pydantic base model/dict\n    If this is the pydantic ResultBase model, only fields in the base model can be updated.\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"set_result_api_v1_exam_result__result_id__put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"result_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Result Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetResult"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/result/all/{task_id}":{"get":{"tags":["results"],"summary":"Get All Task Results","description":"Get all existing results of a certain task.\n\nParameters\n----------\ntask_id\n    Id of parental task\n\nReturns\n-------\n    List of task pydantic output model","operationId":"get_all_task_results_api_v1_exam_result_all__task_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"task_id","in":"path","required":true,"schema":{"anyOf":[{"type":"string","format":"uuid"},{"type":"string"}],"title":"Task Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ResultOut"},"title":"Response Get All Task Results Api V1 Exam Result All  Task Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/dcm/{workflow_id}/{task_id}/{result_id}/{filename}":{"get":{"tags":["results","data"],"summary":"Get DICOM result","description":"Serve a DICOM instance.\n\n  - If it's already a DICOM Part-10 file → return FileResponse (supports HTTP Range).\n  - Else → convert to Part-10 in memory and return StreamingResponse.\n\nHeaders:\n  - 'application/dicom' content type\n  - inline disposition (avoid forced download)\n  - 'Cache-Control: no-transform' to prevent proxies from gzipping (which breaks Range offsets)","operationId":"get-dicom","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"type":"string","title":"Workflow Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"string","title":"Task Id"}},{"name":"result_id","in":"path","required":true,"schema":{"type":"string","title":"Result Id"}},{"name":"filename","in":"path","required":true,"schema":{"type":"string","title":"Filename"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}},"application/dicom":{}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/mrd/{workflow_id}/{task_id}/{result_id}/meta":{"get":{"tags":["results","data"],"summary":"Get ISMRMRD metadata (indexed acquisitions)","description":"Get MRD meta info.","operationId":"get-mrd-meta","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"type":"string","title":"Workflow Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"string","title":"Task Id"}},{"name":"result_id","in":"path","required":true,"schema":{"type":"string","title":"Result Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MRDMetaResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/mrd/{workflow_id}/{task_id}/{result_id}/data":{"get":{"tags":["results","data"],"summary":"Get MRD (binary, interleaved float32 complex)","description":"Get MRD as binary stream.","operationId":"getMRD","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"type":"string","title":"Workflow Id"}},{"name":"task_id","in":"path","required":true,"schema":{"type":"string","title":"Task Id"}},{"name":"result_id","in":"path","required":true,"schema":{"type":"string","title":"Result Id"}},{"name":"ids","in":"query","required":true,"schema":{"type":"string","description":"IDs: '0,1,10-20,40-50:2'","title":"Ids"},"description":"IDs: '0,1,10-20,40-50:2'"},{"name":"coil_idx","in":"query","required":false,"schema":{"type":"integer","minimum":0,"description":"Coil index","default":0,"title":"Coil Idx"},"description":"Coil index"},{"name":"stride","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Decimate samples by stride","default":1,"title":"Stride"},"description":"Decimate samples by stride"}],"responses":{"200":{"description":"Binary packet stream with a tiny header + payload(s).","content":{"application/json":{"schema":{}},"application/octet-stream":{"schema":{"type":"string","format":"binary"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/sequence/{sequence_id}":{"get":{"tags":["mri sequences"],"summary":"Get Mri Sequence By Id","description":"Retrieve an MRI sequence by its ID.\n\nParameters\n----------\nsequence_id : str\n    The ID of the MRI sequence to retrieve.\ndatabase : AsyncIOMotorDatabase\n    The MongoDB database handle.\n\nReturns\n-------\nMRISequence\n    The retrieved MRI sequence.","operationId":"get_mri_sequence_by_id_api_v1_exam_sequence__sequence_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"sequence_id","in":"path","required":true,"schema":{"type":"string","title":"Sequence Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MRISequenceOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["mri sequences"],"summary":"Update Mri Sequence Endpoint","description":"Update an MRI sequence with new data.\n\nParameters\n----------\nsequence_id : str\n    The ID of the MRI sequence to update.\nmri_sequence : MRISequence\n    The updated MRI sequence data.\ndatabase : AsyncIOMotorDatabase\n    The MongoDB database handle.\n\nReturns\n-------\nMRISequence\n    The updated MRI sequence.","operationId":"update_mri_sequence_endpoint_api_v1_exam_sequence__sequence_id__put","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"sequence_id","in":"path","required":true,"schema":{"type":"string","title":"Sequence Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseMRISequence"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MRISequenceOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["mri sequences"],"summary":"Delete Mri Sequence Endpoint","description":"Delete an MRI sequence by its ID.\n\nParameters\n----------\nsequence_id : str\n    The ID of the MRI sequence to delete.\ndatabase : AsyncIOMotorDatabase\n    The MongoDB database handle.\n\nReturns\n-------\nNone","operationId":"delete_mri_sequence_endpoint_api_v1_exam_sequence__sequence_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"sequence_id","in":"path","required":true,"schema":{"type":"string","title":"Sequence Id"}}],"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/sequence":{"post":{"tags":["mri sequences"],"summary":"Create Mri Sequence","description":"Upload an MRI sequence file and store it with the provided metadata.\n\nParameters\n----------\nmri_sequence : MRISequenceCreate\n    The MRI sequence metadata.\nseq_file : UploadFile\n    The MRI sequence file to store.\nxml_file : UploadFile\n    The ISMRMRD header xml file to store.\ndatabase : AsyncIOMotorDatabase\n    The MongoDB database handle.\n\nReturns\n-------\nMRISequence\n    The stored MRI sequence with the uploaded file.","operationId":"create_mri_sequence_api_v1_exam_sequence_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_create_mri_sequence_api_v1_exam_sequence_post"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MRISequenceOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/sequences/all":{"get":{"tags":["mri sequences"],"summary":"Get All Mri Sequences","description":"Retrieve a list of all MRI sequences from the database.\n\nParameters\n----------\ndatabase : AsyncIOMotorDatabase\n    The MongoDB database handle.\n\nReturns\n-------\nList[MRISequence]\n    The list of MRI sequences.","operationId":"get_all_mri_sequences_api_v1_exam_sequences_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/MRISequenceOut"},"type":"array","title":"Response Get All Mri Sequences Api V1 Exam Sequences All Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/sequence/{sequence_id}/file":{"get":{"tags":["mri sequences"],"summary":"Get Mri Sequence File By Id","description":"Retrieve an MRI sequence file by its ID.\n\nParameters\n----------\nsequence_id : str\n    The ID of the MRI sequence to retrieve.\nbackground_tasks : BackgroundTasks\n    The background tasks to run.\nname : str\n    The name of the file to download.\ndatabase : AsyncIOMotorDatabase\n    The MongoDB database handle.\n\nReturns\n-------\nFileResponse\n    The retrieved MRI sequence file.","operationId":"get_mri_sequence_file_by_id_api_v1_exam_sequence__sequence_id__file_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"sequence_id","in":"path","required":true,"schema":{"type":"string","title":"Sequence Id"}},{"name":"name","in":"query","required":false,"schema":{"type":"string","default":"sequence","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/exam/sequence/{sequence_id}/header":{"get":{"tags":["mri sequences"],"summary":"Get Mri Sequence Header File By Id","description":"Retrieve an MRI sequence header (ISMRMRD header) file by its ID.\n\nParameters\n----------\nsequence_id : str\n    The ID of the MRI sequence to retrieve.\nbackground_tasks : BackgroundTasks\n    The background tasks to run.\nname : str\n    The name of the file to download.\ndatabase : AsyncIOMotorDatabase\n    The MongoDB database handle.\n\nReturns\n-------\nFileResponse\n    The retrieved MRI sequence file.","operationId":"get_mri_sequence_header_file_by_id_api_v1_exam_sequence__sequence_id__header_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"sequence_id","in":"path","required":true,"schema":{"type":"string","title":"Sequence Id"}},{"name":"name","in":"query","required":false,"schema":{"type":"string","default":"header","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"AcquisitionLimits":{"properties":{"patient_height":{"type":"integer","title":"Patient Height"},"patient_weight":{"type":"integer","title":"Patient Weight"},"patient_gender":{"$ref":"#/components/schemas/Gender","default":"NOT_GIVEN"},"patient_age":{"type":"integer","title":"Patient Age"}},"type":"object","required":["patient_height","patient_weight","patient_age"],"title":"AcquisitionLimits","description":"Pydantic definition of AcquisitionLimits."},"AcquisitionParameter":{"properties":{"fov_scaling":{"$ref":"#/components/schemas/XYZ"},"fov_offset":{"$ref":"#/components/schemas/XYZ"},"fov_rotation":{"$ref":"#/components/schemas/XYZ"}},"type":"object","required":["fov_scaling","fov_offset","fov_rotation"],"title":"AcquisitionParameter","description":"Pydantic definition of acquisition parameters."},"AcquisitionTaskOut":{"properties":{"workflow_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Workflow Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"task_type":{"$ref":"#/components/schemas/TaskType"},"destination":{"type":"string","title":"Destination"},"status":{"$ref":"#/components/schemas/ItemStatus"},"progress":{"type":"integer","title":"Progress"},"is_template":{"type":"boolean","title":"Is Template"},"device_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Device Id"},"sequence_id":{"type":"string","title":"Sequence Id"},"acquisition_parameter":{"$ref":"#/components/schemas/AcquisitionParameter"},"id":{"type":"string","format":"uuid","title":"Id"},"creator":{"type":"string","title":"Creator"},"datetime_created":{"type":"string","format":"date-time","title":"Datetime Created"},"datetime_updated":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Datetime Updated"},"results":{"items":{"$ref":"#/components/schemas/ResultOut"},"type":"array","title":"Results"},"acquisition_limits":{"anyOf":[{"$ref":"#/components/schemas/AcquisitionLimits"},{"type":"null"}]}},"type":"object","required":["name","description","task_type","destination","status","progress","is_template","sequence_id","acquisition_parameter","id","creator","datetime_created","results"],"title":"AcquisitionTaskOut","description":"Acquisition Task output model."},"BaseAcquisitionTask":{"properties":{"workflow_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Workflow Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"task_type":{"type":"string","const":"ACQUISITION","title":"Task Type"},"destination":{"type":"string","title":"Destination"},"status":{"$ref":"#/components/schemas/ItemStatus"},"progress":{"type":"integer","title":"Progress"},"is_template":{"type":"boolean","title":"Is Template"},"device_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Device Id"},"sequence_id":{"type":"string","title":"Sequence Id"},"acquisition_parameter":{"$ref":"#/components/schemas/AcquisitionParameter"}},"type":"object","required":["name","description","task_type","destination","status","progress","is_template","sequence_id","acquisition_parameter"],"title":"BaseAcquisitionTask","description":"Represents a task for data acquisition in the system."},"BaseDAGTask":{"properties":{"workflow_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Workflow Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"task_type":{"type":"string","const":"DAG","title":"Task Type"},"destination":{"type":"string","title":"Destination"},"status":{"$ref":"#/components/schemas/ItemStatus"},"progress":{"type":"integer","title":"Progress"},"is_template":{"type":"boolean","title":"Is Template"},"dag_type":{"type":"string","enum":["RECONSTRUCTION","PROCESSING"],"title":"Dag Type"},"dag_id":{"type":"string","title":"Dag Id"},"input_task_ids":{"items":{"type":"string","format":"uuid"},"type":"array","title":"Input Task Ids","default":[]},"parameter":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Parameter"}},"type":"object","required":["name","description","task_type","destination","status","progress","is_template","dag_type","dag_id"],"title":"BaseDAGTask","description":"Workflow task model."},"BaseExam":{"properties":{"patient_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Patient Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"indication":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Indication"},"comment":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Comment"},"status":{"$ref":"#/components/schemas/ItemStatus"},"is_template":{"type":"boolean","title":"Is Template"}},"type":"object","required":["name","description","status","is_template"],"title":"BaseExam","description":"Exam base model."},"BaseMRISequence":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"sequence_type":{"type":"string","title":"Sequence Type"},"tags":{"items":{"type":"string"},"type":"array","title":"Tags","default":[]}},"type":"object","required":["name","description","sequence_type"],"title":"BaseMRISequence","description":"Base model for MRI sequence."},"BaseWorkflow":{"properties":{"exam_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Exam Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"comment":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Comment"},"status":{"$ref":"#/components/schemas/ItemStatus"},"is_template":{"type":"boolean","title":"Is Template"}},"type":"object","required":["name","description","status","is_template"],"title":"BaseWorkflow","description":"Workflow base model."},"Body_create_mri_sequence_api_v1_exam_sequence_post":{"properties":{"seq_file":{"type":"string","format":"binary","title":"Seq File"},"xml_file":{"type":"string","format":"binary","title":"Xml File"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description","default":""},"sequence_type":{"type":"string","title":"Sequence Type","default":""},"tags":{"items":{"type":"string"},"type":"array","title":"Tags","default":[]}},"type":"object","required":["seq_file","xml_file","name"],"title":"Body_create_mri_sequence_api_v1_exam_sequence_post"},"DAGTaskOut":{"properties":{"workflow_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Workflow Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"task_type":{"$ref":"#/components/schemas/TaskType"},"destination":{"type":"string","title":"Destination"},"status":{"$ref":"#/components/schemas/ItemStatus"},"progress":{"type":"integer","title":"Progress"},"is_template":{"type":"boolean","title":"Is Template"},"dag_type":{"type":"string","enum":["RECONSTRUCTION","PROCESSING"],"title":"Dag Type"},"dag_id":{"type":"string","title":"Dag Id"},"input_task_ids":{"items":{"type":"string","format":"uuid"},"type":"array","title":"Input Task Ids","default":[]},"parameter":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Parameter"},"id":{"type":"string","format":"uuid","title":"Id"},"creator":{"type":"string","title":"Creator"},"datetime_created":{"type":"string","format":"date-time","title":"Datetime Created"},"datetime_updated":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Datetime Updated"},"results":{"items":{"$ref":"#/components/schemas/ResultOut"},"type":"array","title":"Results"}},"type":"object","required":["name","description","task_type","destination","status","progress","is_template","dag_type","dag_id","id","creator","datetime_created","results"],"title":"DAGTaskOut","description":"Workflow Task output model."},"ExamOut":{"properties":{"patient_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Patient Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"indication":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Indication"},"comment":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Comment"},"status":{"$ref":"#/components/schemas/ItemStatus"},"is_template":{"type":"boolean","title":"Is Template"},"id":{"type":"string","format":"uuid","title":"Id"},"creator":{"type":"string","title":"Creator"},"datetime_created":{"type":"string","format":"date-time","title":"Datetime Created"},"datetime_updated":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Datetime Updated"},"workflows":{"items":{"$ref":"#/components/schemas/WorkflowOut"},"type":"array","title":"Workflows"}},"type":"object","required":["name","description","status","is_template","id","creator","datetime_created","workflows"],"title":"ExamOut","description":"Exam output model."},"Gender":{"type":"string","enum":["MALE","FEMALE","OTHER","NOT_GIVEN"],"title":"Gender","description":"Pydantic definition of genders."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"ItemStatus":{"type":"string","enum":["NEW","UPDATED","STARTED","FINISHED","ERROR","INPROGRESS"],"title":"ItemStatus","description":"Task status enum."},"MRDAcquisitionInfo":{"properties":{"acquisition_id":{"type":"integer","minimum":0.0,"title":"Acquisition Id"},"num_samples":{"type":"integer","minimum":1.0,"title":"Num Samples"},"num_coils":{"type":"integer","minimum":1.0,"title":"Num Coils"},"dwell_time":{"type":"number","title":"Dwell Time"}},"type":"object","required":["acquisition_id","num_samples","num_coils","dwell_time"],"title":"MRDAcquisitionInfo","description":"ISMRM raw data / (ISMR)MRD acquisition info."},"MRDMetaResponse":{"properties":{"workflow_id":{"type":"string","title":"Workflow Id"},"task_id":{"type":"string","title":"Task Id"},"result_id":{"type":"string","title":"Result Id"},"dtype":{"type":"string","title":"Dtype","default":"fc32"},"acquisitions":{"items":{"$ref":"#/components/schemas/MRDAcquisitionInfo"},"type":"array","title":"Acquisitions","default":[]}},"type":"object","required":["workflow_id","task_id","result_id"],"title":"MRDMetaResponse","description":"ISMRM raw data / (ISMR)MRD meta data response."},"MRISequenceOut":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"sequence_type":{"type":"string","title":"Sequence Type"},"tags":{"items":{"type":"string"},"type":"array","title":"Tags","default":[]},"_id":{"type":"string","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Updated At"},"seq_file":{"title":"Seq File"},"seq_file_extension":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Seq File Extension"},"xml_file":{"anyOf":[{},{"type":"null"}],"title":"Xml File"},"xml_file_extension":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Xml File Extension"}},"type":"object","required":["name","description","sequence_type","_id","created_at","seq_file"],"title":"MRISequenceOut","description":"Output model for MRI sequence."},"ResultOut":{"properties":{"type":{"$ref":"#/components/schemas/ResultType"},"directory":{"type":"string","title":"Directory"},"files":{"items":{"type":"string"},"type":"array","title":"Files","default":[]},"meta":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Meta"},"task_id":{"type":"string","format":"uuid","title":"Task Id"},"id":{"type":"string","format":"uuid","title":"Id"},"datetime_created":{"type":"string","format":"date-time","title":"Datetime Created"}},"type":"object","required":["type","directory","task_id","id","datetime_created"],"title":"ResultOut","description":"Result output model."},"ResultType":{"type":"string","enum":["DICOM","MRD","NUMPY","CALIBRATION","NOT_SET"],"title":"ResultType","description":"Result type enum."},"SetResult":{"properties":{"type":{"$ref":"#/components/schemas/ResultType"},"directory":{"type":"string","title":"Directory"},"files":{"items":{"type":"string"},"type":"array","title":"Files","default":[]},"meta":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Meta"}},"type":"object","required":["type","directory"],"title":"SetResult","description":"Update result model."},"TaskType":{"type":"string","enum":["ACQUISITION","DAG","RECONSTRUCTION","PROCESSING"],"title":"TaskType","description":"Task type enum."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WorkflowOut":{"properties":{"exam_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Exam Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"comment":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Comment"},"status":{"$ref":"#/components/schemas/ItemStatus"},"is_template":{"type":"boolean","title":"Is Template"},"id":{"type":"string","format":"uuid","title":"Id"},"creator":{"type":"string","title":"Creator"},"datetime_created":{"type":"string","format":"date-time","title":"Datetime Created"},"datetime_updated":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Datetime Updated"},"tasks":{"items":{"anyOf":[{"$ref":"#/components/schemas/AcquisitionTaskOut"},{"$ref":"#/components/schemas/DAGTaskOut"}]},"type":"array","title":"Tasks"}},"type":"object","required":["name","description","status","is_template","id","creator","datetime_created","tasks"],"title":"WorkflowOut","description":"Workflow output model."},"XYZ":{"properties":{"x":{"type":"number","title":"X"},"y":{"type":"number","title":"Y"},"z":{"type":"number","title":"Z"}},"type":"object","required":["x","y","z"],"title":"XYZ","description":"Pydantic definition of coordinates."}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"login"}}}}}}