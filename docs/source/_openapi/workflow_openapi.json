{
    "openapi": "3.0.2",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/workflow/": {
            "get": {
                "tags": [
                    "workflow"
                ],
                "summary": "Get Workflow List",
                "description": "Get all workflows endpoint.\n\nReturns\n-------\n    List of workflow pydantic output models, might be empty",
                "operationId": "get_workflow_list_api_v1_workflow__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Workflow List Api V1 Workflow  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkflowOut"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "workflow"
                ],
                "summary": "Create Workflow",
                "description": "Create new workflow endpoint.\n\nParameters\n----------\npayload\n    Workflow pydantic base model\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful",
                "operationId": "create_workflow_api_v1_workflow__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseWorkflow"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workflow/{workflow_id}": {
            "get": {
                "tags": [
                    "workflow"
                ],
                "summary": "Get Workflow",
                "description": "Get workflow endpoint.\n\nParameters\n----------\nworkflow_id\n    Id of the workflow object to be returned\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "get_workflow_api_v1_workflow__workflow_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Workflow Id",
                            "type": "integer"
                        },
                        "name": "workflow_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workflow"
                ],
                "summary": "Delete Workflow",
                "description": "Delete workflow endpoint.\n\nParameters\n----------\nworkflow_id\n    Id of workflow to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "delete_workflow_api_v1_workflow__workflow_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Workflow Id",
                            "type": "integer"
                        },
                        "name": "workflow_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workflow/{workflow_id}/": {
            "put": {
                "tags": [
                    "workflow"
                ],
                "summary": "Update Workflow",
                "description": "Update existing workflow endpoint.\n\nParameters\n----------\nworkflow_id\n    Id of the workflow to be updated\npayload\n    Data to be updated, workflow pydantic base model\n\nReturns\n-------\n    Workflow pydantic output model.\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "update_workflow_api_v1_workflow__workflow_id___put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Workflow Id",
                            "type": "integer"
                        },
                        "name": "workflow_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseWorkflow"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workflow/upload/{record_id}/": {
            "post": {
                "summary": "Upload Result",
                "description": "Upload workflow result.\n\nParameters\n----------\nrecord_id\n    Id of the record, which is processed by workflow\nfile, optional\n    Data upload, e.g. reconstruction result, by default File(...)\n\nReturns\n-------\n    Notification",
                "operationId": "upload_result_api_v1_workflow_upload__record_id___post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "type": "string"
                        },
                        "name": "record_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_result_api_v1_workflow_upload__record_id___post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Upload Result Api V1 Workflow Upload  Record Id   Post",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workflow/health/readiness": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Readiness",
                "description": "Readiness health endpoint.\n\nInspects sqlalchemy engine and check if workflow table exists.\n\nReturns\n-------\n    Status docstring\n\nRaises\n------\nHTTPException\n    500: Workflow table does not exist",
                "operationId": "readiness_api_v1_workflow_health_readiness_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BaseWorkflow": {
                "title": "BaseWorkflow",
                "required": [
                    "host",
                    "name",
                    "modality",
                    "type",
                    "status",
                    "kafka_topic"
                ],
                "type": "object",
                "properties": {
                    "host": {
                        "title": "Host",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "author": {
                        "title": "Author",
                        "type": "string"
                    },
                    "modality": {
                        "title": "Modality",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "kafka_topic": {
                        "title": "Kafka Topic",
                        "type": "string"
                    }
                },
                "description": "Workflow pydantic base model."
            },
            "Body_upload_result_api_v1_workflow_upload__record_id___post": {
                "title": "Body_upload_result_api_v1_workflow_upload__record_id___post",
                "required": [
                    "file"
                ],
                "type": "object",
                "properties": {
                    "file": {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "WorkflowOut": {
                "title": "WorkflowOut",
                "required": [
                    "host",
                    "name",
                    "modality",
                    "type",
                    "status",
                    "kafka_topic",
                    "id",
                    "datetime_created"
                ],
                "type": "object",
                "properties": {
                    "host": {
                        "title": "Host",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "author": {
                        "title": "Author",
                        "type": "string"
                    },
                    "modality": {
                        "title": "Modality",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "kafka_topic": {
                        "title": "Kafka Topic",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "datetime_created": {
                        "title": "Datetime Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_updated": {
                        "title": "Datetime Updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "Workflow pydantic output model."
            }
        }
    }
}