{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/api/v1/userlogin/getcurrentuser":{"get":{"tags":["user"],"summary":"Get Current User","description":"Get current user from access_token. May be called as an endpoint or used in FastAPI with Depends.\n\nParameters\n----------\naccess_token\n    User token as previously obtained trough a call to /login\n    Submit via HTTP header \"Authorization: Bearer <access_token>\"\n\nReturns\n-------\n    User pydantic model, the user data of the current user.\n\nRaises\n------\nHTTPException\n    401: Unauthorized if the token is invalid or outdated.","operationId":"get_current_user_api_v1_userlogin_getcurrentuser_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/userlogin/loginfromcookie":{"post":{"tags":["login"],"summary":"Loginfromcookie","description":"Login endpoint for login with cookie.\n\nParameters\n----------\naccess_token\n    User token as previously obtained trough a call to /login\n    Submit via HTTP cookie.\n\nReturns\n-------\n    User pydantic model, the user data in case of a successful login.\n\nRaises\n------\nHTTPException\n    401: Unauthorized if the username or password is wrong.","operationId":"loginfromcookie_api_v1_userlogin_loginfromcookie_post","parameters":[{"name":"access_token","in":"cookie","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Access Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/userlogin/login":{"post":{"tags":["login"],"summary":"Login","description":"Login endpoint.\n\nParameters\n----------\nform_data\n    Http form data for OAuth2 compliant login with username and password.\n\nReturns\n-------\n    User pydantic model, the user data in case of a successful login.\n\nRaises\n------\nHTTPException\n    401: Unauthorized if the username or password is wrong.","operationId":"login_api_v1_userlogin_login_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login_api_v1_userlogin_login_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/userlogin/logout":{"post":{"tags":["login"],"summary":"Logout","description":"Logout endpoint.","operationId":"logout_api_v1_userlogin_logout_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/userlogin/getallusers":{"get":{"tags":["user"],"summary":"Get User List","description":"Get all users endpoint (only admins).\n\nReturns\n-------\n    List of all users. The access_token and token_type properties are set to \"\" for all of them.","operationId":"get_user_list_api_v1_userlogin_getallusers_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/User"},"type":"array","title":"Response Get User List Api V1 Userlogin Getallusers Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/userlogin/checknousers":{"get":{"tags":["user"],"summary":"Check No Users","description":"Check if there are no users in the database.\n\nReturns\n-------\n    True, if there are no users in the database.","operationId":"check_no_users_api_v1_userlogin_checknousers_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"boolean","title":"Response Check No Users Api V1 Userlogin Checknousers Get"}}}}}}},"/api/v1/userlogin/createuser":{"post":{"tags":["user"],"summary":"Create User","description":"Create user database entry (only admins).\n\nParameters\n----------\nnew_user\n    pydantic base model of new user, token_type should be \"password\" and\n    access_token should contain the password of the new user.\n    The password of the new user should at least be 12 characters long.","operationId":"create_user_api_v1_userlogin_createuser_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/userlogin/createfirstuser":{"post":{"tags":["user"],"summary":"Create First User","description":"Create first user.\n\nParameters\n----------\nfirst_user\n    pydantic base model of the first user, token_type should be \"password\" and\n    access_token should contain the password of the new user.\n    The password of the new user should at least be 12 characters long.\n    The role should be admin.","operationId":"create_first_user_api_v1_userlogin_createfirstuser_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/userlogin/deleteuser":{"delete":{"tags":["user"],"summary":"User Delete","description":"Delete an existing user (requires admin priviledges).\n\nParameters\n----------\nusername_to_delete\n    Name of the user to delete.\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"user_delete_api_v1_userlogin_deleteuser_delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"username_to_delete","in":"query","required":true,"schema":{"type":"string","title":"Username To Delete"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/userlogin/updateuser":{"put":{"tags":["user"],"summary":"Update User","description":"Update the first_name, last_name, email and role of an existing user.\n\nParameters\n----------\nupdated_user\n    The attribute username identifies the user to modify.\n    The attributes first_name, last_name, email and role are set for this user.\n\nReturns\n-------\n    None\n\nRaises\n------\nHTTPException\n    404: Not found if user not found.","operationId":"update_user_api_v1_userlogin_updateuser_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/userlogin/changepassword":{"put":{"tags":["user"],"summary":"Change Password","description":"Change password of a user. Only administrators may change passwords of other users.\n\nParameters\n----------\npassword_update_request\n    .password_of_requester: the password of the requester\n    .username_to_change_password_for: the username for whom to change the password\n    .newpassword: the new password\n\nReturns\n-------\n    None\n\nRaises\n------\nHTTPException\n    400: New Password must have at least 12 characters. Old Password must be correct.","operationId":"change_password_api_v1_userlogin_changepassword_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordUpdateRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/userlogin/health/readiness":{"get":{"tags":["health"],"summary":"Readiness","description":"Readiness health endpoint.\n\nReturns\n-------\n    Status dictionary\n\nRaises\n------\nHTTPException\n    500: User table does not exist","operationId":"readiness_api_v1_userlogin_health_readiness_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Body_login_api_v1_userlogin_login_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"^password$"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","format":"password","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"format":"password","title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_login_api_v1_userlogin_login_post"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"PasswordUpdateRequest":{"properties":{"password_of_requester":{"type":"string","title":"Password Of Requester"},"username_to_change_password_for":{"type":"string","title":"Username To Change Password For"},"newpassword":{"type":"string","title":"Newpassword"}},"type":"object","required":["password_of_requester","username_to_change_password_for","newpassword"],"title":"PasswordUpdateRequest"},"User":{"properties":{"username":{"type":"string","title":"Username"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"email":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Email"},"role":{"$ref":"#/components/schemas/UserRole"},"access_token":{"type":"string","title":"Access Token"},"token_type":{"type":"string","title":"Token Type"},"last_activity_unixtime":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Last Activity Unixtime"},"last_login_unixtime":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Last Login Unixtime"}},"type":"object","required":["username","first_name","last_name","role","access_token","token_type"],"title":"User"},"UserRole":{"type":"string","enum":["admin","medical","scientist","engineer"],"title":"UserRole","description":"User role enum."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"login"}}}}}}