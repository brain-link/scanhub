{
    "openapi": "3.0.2",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/exam/": {
            "post": {
                "tags": [
                    "exams"
                ],
                "summary": "Exam Create",
                "description": "Create exam endpoint.\n\nParameters\n----------\npayload\n    Exam pydantic input model.\n\nReturns\n-------\n    Exam pydantic output moddel.\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful",
                "operationId": "exam_create_api_v1_exam__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseExam"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExamOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/{exam_id}": {
            "get": {
                "tags": [
                    "exams"
                ],
                "summary": "Exam Get",
                "description": "Get exam endpoint.\n\nParameters\n----------\nexam_id\n    Id of requested exam entry\n\nReturns\n-------\n    Exam pydantic output model.\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "exam_get_api_v1_exam__exam_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Exam Id",
                            "type": "integer"
                        },
                        "name": "exam_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExamOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "exams"
                ],
                "summary": "Exam Update",
                "description": "Update exam.\n\nParameters\n----------\nexam_id\n    Id of the exam to be updated\npayload\n    Exam pydantic input model\n\nReturns\n-------\n    Exam pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "exam_update_api_v1_exam__exam_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Exam Id",
                            "type": "integer"
                        },
                        "name": "exam_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseExam"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExamOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "exams"
                ],
                "summary": "Exam Delete",
                "description": "Delete exam by id.\n\nParameters\n----------\nexam_id\n    Id of the exam to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "exam_delete_api_v1_exam__exam_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Exam Id",
                            "type": "integer"
                        },
                        "name": "exam_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/all/{patient_id}": {
            "get": {
                "tags": [
                    "exams"
                ],
                "summary": "Exam Get All",
                "description": "Get all exams of a patient endpoint.\n\nParameters\n----------\npatient_id\n    Id of parent\n\nReturns\n-------\n    List of exam pydantic output models",
                "operationId": "exam_get_all_api_v1_exam_all__patient_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Patient Id",
                            "type": "integer"
                        },
                        "name": "patient_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Exam Get All Api V1 Exam All  Patient Id  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExamOut"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/procedure": {
            "post": {
                "tags": [
                    "procedures"
                ],
                "summary": "Procedure Create",
                "description": "Procedure post endpoint.\n\nParameters\n----------\npayload\n    Pydantic input model\n\nReturns\n-------\n    Pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation not succesful",
                "operationId": "procedure_create_api_v1_exam_procedure_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcedureIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcedureOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/procedure/{procedure_id}": {
            "get": {
                "tags": [
                    "procedures"
                ],
                "summary": "Procedure Get",
                "description": "Procedure get endpoint.\n\nParameters\n----------\nprocedure_id\n    Id of entry to return\n\nReturns\n-------\n    Pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "procedure_get_api_v1_exam_procedure__procedure_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Procedure Id",
                            "type": "integer"
                        },
                        "name": "procedure_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcedureOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "procedures"
                ],
                "summary": "Proceedure Update",
                "description": "Update procedure endpoint.\n\nParameters\n----------\nprocedure_id\n    Id of procedure to be updated\npayload\n    Pydantic input model\n\nReturns\n-------\n    Pydantic output model\n\nRaises\n------\nHTTPException\n    404: Entry not found",
                "operationId": "proceedure_update_api_v1_exam_procedure__procedure_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Procedure Id",
                            "type": "integer"
                        },
                        "name": "procedure_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcedureIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcedureOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "procedures"
                ],
                "summary": "Procedure Delete",
                "description": "Delete procedure endpoint.\n\nParameters\n----------\nprocedure_id\n    Id of entry to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "procedure_delete_api_v1_exam_procedure__procedure_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Procedure Id",
                            "type": "integer"
                        },
                        "name": "procedure_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/procedure/all/{exam_id}": {
            "get": {
                "tags": [
                    "procedures"
                ],
                "summary": "Procedure Get All",
                "description": "Get all procedures of a parent endpoint.\n\nParameters\n----------\nexam_id\n    Id of the parent object\n\nReturns\n-------\n    List of pydantic output models",
                "operationId": "procedure_get_all_api_v1_exam_procedure_all__exam_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Exam Id",
                            "type": "integer"
                        },
                        "name": "exam_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Procedure Get All Api V1 Exam Procedure All  Exam Id  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProcedureOut"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/job": {
            "post": {
                "tags": [
                    "jobs"
                ],
                "summary": "Job Create",
                "description": "Create new job endpoint.\n\nParameters\n----------\npayload\n    Job pydantic input model\n\nReturns\n-------\n    Job pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful",
                "operationId": "job_create_api_v1_exam_job_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseJob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/job/{job_id}": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Job Get",
                "description": "Get job endpoint.\n\nParameters\n----------\njob_id\n    Id of the job to be returned\n\nReturns\n-------\n    Job pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "job_get_api_v1_exam_job__job_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Job Id",
                            "type": "integer"
                        },
                        "name": "job_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "jobs"
                ],
                "summary": "Job Update",
                "description": "Update job endpoint.\n\nParameters\n----------\njob_id\n    Id of the job to be updated\npayload\n    Job pydantic indput model\n\nReturns\n-------\n    Job pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "job_update_api_v1_exam_job__job_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Job Id",
                            "type": "integer"
                        },
                        "name": "job_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseJob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "jobs"
                ],
                "summary": "Job Delete",
                "description": "Delete job endpoint.\n\nParameters\n----------\njob_id\n    Id of the job to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "job_delete_api_v1_exam_job__job_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Job Id",
                            "type": "integer"
                        },
                        "name": "job_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/job/all/{procedure_id}": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "summary": "Job Get All",
                "description": "Get all jobs of a procedure endpoint.\n\nParameters\n----------\nprocedure_id\n    Id of parent procedure\n\nReturns\n-------\n    List of job pydantic output model",
                "operationId": "job_get_all_api_v1_exam_job_all__procedure_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Procedure Id",
                            "type": "integer"
                        },
                        "name": "procedure_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Job Get All Api V1 Exam Job All  Procedure Id  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobOut"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/record": {
            "post": {
                "tags": [
                    "records"
                ],
                "summary": "Record Create",
                "description": "Create record endpoint.\n\nParameters\n----------\npayload\n    Record pydantic input model\n\nReturns\n-------\n    Record pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful",
                "operationId": "record_create_api_v1_exam_record_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecordIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/record/{record_id}": {
            "get": {
                "tags": [
                    "records"
                ],
                "summary": "Record Get",
                "description": "Get single record endpoint.\n\nParameters\n----------\nrecord_id\n    Id of the record to return\n\nReturns\n-------\n    Record pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "record_get_api_v1_exam_record__record_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "type": "integer"
                        },
                        "name": "record_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "records"
                ],
                "summary": "Record Delete",
                "description": "Delete record endpoint.\n\nParameters\n----------\nrecord_id\n    Id of the record to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found",
                "operationId": "record_delete_api_v1_exam_record__record_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Record Id",
                            "type": "integer"
                        },
                        "name": "record_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/record/all/{job_id}": {
            "get": {
                "tags": [
                    "records"
                ],
                "summary": "Record Get All",
                "description": "Get all records of a job endpoint.\n\nParameters\n----------\njob_id\n    Id of parental job\n\nReturns\n-------\n    List of record pydantic output model",
                "operationId": "record_get_all_api_v1_exam_record_all__job_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Job Id",
                            "type": "integer"
                        },
                        "name": "job_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Record Get All Api V1 Exam Record All  Job Id  Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RecordOut"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/exam/health/readiness": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Readiness",
                "description": "Readiness health endpoint.\n\nReturns\n-------\n    Status dictionary\n\nRaises\n------\nHTTPException\n    500: Any of the exam-tree tables does not exist",
                "operationId": "readiness_api_v1_exam_health_readiness_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BaseExam": {
                "title": "BaseExam",
                "required": [
                    "patient_id",
                    "name",
                    "creator",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "patient_id": {
                        "title": "Patient Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "country": {
                        "title": "Country",
                        "type": "string"
                    },
                    "site": {
                        "title": "Site",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "type": "string"
                    },
                    "creator": {
                        "title": "Creator",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    }
                },
                "description": "Exam base model."
            },
            "BaseJob": {
                "title": "BaseJob",
                "required": [
                    "type",
                    "procedure_id",
                    "sequence_id",
                    "device_id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    },
                    "procedure_id": {
                        "title": "Procedure Id",
                        "type": "integer"
                    },
                    "sequence_id": {
                        "title": "Sequence Id",
                        "type": "string"
                    },
                    "workflow_id": {
                        "title": "Workflow Id",
                        "type": "integer"
                    },
                    "device_id": {
                        "title": "Device Id",
                        "type": "integer"
                    }
                },
                "description": "Job base model."
            },
            "DeviceOut": {
                "title": "DeviceOut",
                "required": [
                    "name",
                    "manufacturer",
                    "modality",
                    "status",
                    "ip_address",
                    "id",
                    "datetime_created"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "manufacturer": {
                        "title": "Manufacturer",
                        "type": "string"
                    },
                    "modality": {
                        "title": "Modality",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "site": {
                        "title": "Site",
                        "type": "string"
                    },
                    "ip_address": {
                        "title": "Ip Address",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "datetime_created": {
                        "title": "Datetime Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_updated": {
                        "title": "Datetime Updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "Devicee output model."
            },
            "ExamOut": {
                "title": "ExamOut",
                "required": [
                    "patient_id",
                    "name",
                    "creator",
                    "status",
                    "id",
                    "datetime_created",
                    "procedures"
                ],
                "type": "object",
                "properties": {
                    "patient_id": {
                        "title": "Patient Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "country": {
                        "title": "Country",
                        "type": "string"
                    },
                    "site": {
                        "title": "Site",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "type": "string"
                    },
                    "creator": {
                        "title": "Creator",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "datetime_created": {
                        "title": "Datetime Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_updated": {
                        "title": "Datetime Updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "procedures": {
                        "title": "Procedures",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProcedureOut"
                        }
                    }
                },
                "description": "Exam output model."
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "JobOut": {
                "title": "JobOut",
                "required": [
                    "type",
                    "procedure_id",
                    "sequence_id",
                    "device_id",
                    "id",
                    "is_acquired",
                    "records",
                    "datetime_created"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    },
                    "procedure_id": {
                        "title": "Procedure Id",
                        "type": "integer"
                    },
                    "sequence_id": {
                        "title": "Sequence Id",
                        "type": "string"
                    },
                    "workflow_id": {
                        "title": "Workflow Id",
                        "type": "integer"
                    },
                    "device_id": {
                        "title": "Device Id",
                        "type": "integer"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "is_acquired": {
                        "title": "Is Acquired",
                        "type": "boolean"
                    },
                    "device": {
                        "$ref": "#/components/schemas/DeviceOut"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/WorkflowOut"
                    },
                    "records": {
                        "title": "Records",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecordOut"
                        }
                    },
                    "datetime_created": {
                        "title": "Datetime Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_updated": {
                        "title": "Datetime Updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "Job output model."
            },
            "ProcedureIn": {
                "title": "ProcedureIn",
                "required": [
                    "name",
                    "status",
                    "exam_id"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "exam_id": {
                        "title": "Exam Id",
                        "type": "integer"
                    }
                },
                "description": "Procedure input model."
            },
            "ProcedureOut": {
                "title": "ProcedureOut",
                "required": [
                    "name",
                    "status",
                    "id",
                    "datetime_created",
                    "jobs"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "datetime_created": {
                        "title": "Datetime Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_updated": {
                        "title": "Datetime Updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "jobs": {
                        "title": "Jobs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobOut"
                        }
                    }
                },
                "description": "Procedure output model."
            },
            "RecordIn": {
                "title": "RecordIn",
                "required": [
                    "job_id"
                ],
                "type": "object",
                "properties": {
                    "data_path": {
                        "title": "Data Path",
                        "type": "string"
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    },
                    "job_id": {
                        "title": "Job Id",
                        "type": "integer"
                    }
                },
                "description": "Record input model."
            },
            "RecordOut": {
                "title": "RecordOut",
                "required": [
                    "id",
                    "datetime_created"
                ],
                "type": "object",
                "properties": {
                    "data_path": {
                        "title": "Data Path",
                        "type": "string"
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "datetime_created": {
                        "title": "Datetime Created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "Record output model."
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "WorkflowOut": {
                "title": "WorkflowOut",
                "required": [
                    "host",
                    "name",
                    "manufacturer",
                    "modality",
                    "type",
                    "status",
                    "kafka_topic",
                    "id",
                    "datetime_created"
                ],
                "type": "object",
                "properties": {
                    "host": {
                        "title": "Host",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "manufacturer": {
                        "title": "Manufacturer",
                        "type": "string"
                    },
                    "modality": {
                        "title": "Modality",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "kafka_topic": {
                        "title": "Kafka Topic",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "datetime_created": {
                        "title": "Datetime Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_updated": {
                        "title": "Datetime Updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "Workflow output model."
            }
        }
    }
}