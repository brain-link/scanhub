[project]
name = "scanhub-workflow_manager"
version = "0.0.1"
license = { file = "LICENSE" }
description = "The Workflow Manager organizes the processing chains forming ScanHub Workflows."
authors = [
    {name = "David Schote", email = "david.schote@brain-link.de"},
    {name = "Christoph Dinh", email = "christoph.dinh@brain-link.de"}
]
readme = "README.md"

[tool.poetry]
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
asyncpg = "^0.30.0"
uvicorn = "^0.22.0"
psycopg2-binary = "^2.9.6"
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
aiokafka = "^0.8.1"
asyncio = "^3.4.3"
httpx = "^0.27.0"
types-requests = "^2.32.0.20241016"
dagster-graphql = "^1.11.5"

[tool.poetry.group.test.dependencies]
coverage = "*"
codecov = "*"
pytest = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinx_rtd_theme = "*"


[tool.poetry.group.lint.dependencies]
ruff = "^0.12.3"
mypy = "^1.16.1"

[tool.setuptools.package-data]
"app" = ["py.typed"]

[tool.ruff]
src = ["app"]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
# Enable linters
# W = pycodestyle, F = Pyflakes, S = flake8-bandit, I = isort, N = pep8-naming, D = pydocstyle
select = ["W", "F", "S", "I", "N", "D"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
files = ["app"]
python_version = "3.13"
warn_return_any = false
check_untyped_defs = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"