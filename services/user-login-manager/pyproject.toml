[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "scanhub-user-manager"
version = "0.0.1"
license = { file = "LICENSE" }
description = "Provides functionality for user login and user management."
authors = [
    "David Schote <david.schote@brain-link.de>", 
    "Christoph Dinh <christoph.dinh@brain-link.de>",
    "Ben Wilhelm <ben.wilhelm@uniklinik-freiburg.de>"
]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
asyncpg = "^0.30.0"
uvicorn = "^0.22.0"
psycopg2-binary = "^2.9.6"
python-multipart = "^0.0.6"
async-sqlalchemy = "^1.0.0"
typing-extensions = "^4.14.1"

[tool.poetry.group.test.dependencies]
coverage = "*"
codecov = "*"
pytest = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinx_rtd_theme = "*"


[tool.poetry.group.lint.dependencies]
ruff = "^0.12.3"
mypy = "^1.16.1"

[tool.setuptools.package-data]
"app" = ["py.typed"]

[tool.ruff]
src = ["app"]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
# Enable linters
# E = pycodestyle (error)
# W = pycodestyle (warning)
# F = Pyflakes
# S = flake8-bandit
# I = isort
# N = pep8-naming
# D = pydocstyle
select = ["E", "W", "F", "S", "I", "N", "D"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
files = ["app"]
python_version = "3.13"
warn_return_any = false
check_untyped_defs = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true