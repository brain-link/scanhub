[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mri-sequence-manager"
version = "0.0.1"
description = "The MRI Sequence Manager is a CRUD service that manages MRI sequences."
authors = [
    "David Schote <david.schote@brain-link.de>", 
    "Christoph Dinh <christoph.dinh@brain-link.de>"
]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
fastapi = "^0.95.2"
uvicorn = "^0.15.0"
motor = "^2.5.1"
pydantic = "^1.10.9"
python-dotenv = "^0.19.1"
python-multipart = "^0.0.6"
aiofiles = "^0.7.0"
numpy = "1.23.0"    # pypulseq release 1.4 incompatible with numpy 1.25
pypulseq = "^1.4.0"
plotly = "^5.15.0"
pymongo-stubs = "^0.2.0"
motor-stubs = "^1.7.1"

[tool.poetry.group.test.dependencies]
coverage = "*"
codecov = "*"
pytest = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinx_rtd_theme = "*"


[tool.poetry.group.lint.dependencies]
ruff = "^0.1.11"
mypy = "^1.8.0"


[tool.ruff]
src = ["app"]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
# Enable linters
# W = pycodestyle, F = Pyflakes, S = flake8-bandit, I = isort, N = pep8-naming, D = pydocstyle
select = ["W", "F", "S", "I", "N", "D"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
warn_return_any = false
check_untyped_defs = true
warn_no_return = true
warn_unreachable = true
python_version = "3.10"
ignore_missing_imports = true
mypy_path = "app"
