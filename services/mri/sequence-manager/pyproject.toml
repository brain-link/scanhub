[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mri-sequence-manager"
version = "0.0.1"
description = "The MRI Sequence Manager is a CRUD service that manages MRI sequences."
authors = [
    "David Schote <david.schote@brain-link.de>", 
    "Christoph Dinh <christoph.dinh@brain-link.de>"
]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
fastapi = "^0.95.2"
uvicorn = "^0.15.0"
motor = "^2.5.1"
pydantic = "^1.8.2"
python-dotenv = "^0.19.1"
python-multipart = "^0.0.6"
aiofiles = "^0.7.0"
numpy = "1.23.0"    # pypulseq release 1.4 incompatible with numpy 1.25
pypulseq = "^1.4.0"
plotly = "^5.15.0"
pydantic-numpy = "^2.2.0"

[tool.poetry.group.lint.dependencies]
mypy = "*"
flake8 = "*"
Flake8-pyproject = "*"  # flake8 by deefault cannot be configured via this toml file, this package allows the configuration
isort = "*"
autopep8 = "*"
pydocstyle = "*"
pylint = "*"
black = "^23.3.0"
poethepoet = "^0.20.0"

[tool.poetry.group.test.dependencies]
coverage = "*"
codecov = "*"
pytest = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinx_rtd_theme = "*"

[tool.pydocstyle]
convention = "numpy"

[tool.pylint]
py-version = "3.10"
max-attributes = 20
max-line-length = 120
extension-pkg-allow-list = ["pydantic"]
disable = ["too-few-public-methods"]    # suppress warning at pydantic BaseModel and sqlalchemy ORM model

[tool.flake8]
max-line-length = 120

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.poe.tasks]
lint.sequence = ["isort", "black", "pylint", "flake8", "mypy", "pydocstyle"]
lint.ignore_fail = "return_non_zero"

    [tool.poe.tasks.isort]
    help = "Run isort"
    cmd  = "isort app/"

    [tool.poe.tasks.black]
    help = "Run black"
    cmd  = "black app/"

    [tool.poe.tasks.pylint]
    help = "Run pylint"
    cmd  = "pylint app/"

    [tool.poe.tasks.mypy]
    help = "Run mypy"
    cmd  = "mypy app/"

    [tool.poe.tasks.flake8]
    help = "Run flake8"
    cmd  = "flake8 app/"

    [tool.poe.tasks.pydocstyle]
    help = "Run pydocstyle"
    cmd  = "pydocstyle app/"