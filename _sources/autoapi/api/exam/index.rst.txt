:py:mod:`api.exam`
==================

.. py:module:: api.exam

.. autoapi-nested-parse::

   Exam API endpoints.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   api.exam.exam_create
   api.exam.exam_get
   api.exam.exam_get_all
   api.exam.exam_delete
   api.exam.exam_update
   api.exam.procedure_create
   api.exam.procedure_get
   api.exam.procedure_get_all
   api.exam.procedure_delete
   api.exam.proceedure_update
   api.exam.job_create
   api.exam.job_get
   api.exam.job_get_all
   api.exam.job_delete
   api.exam.job_update
   api.exam.record_create
   api.exam.update_record
   api.exam.record_get
   api.exam.record_get_all
   api.exam.record_delete



Attributes
~~~~~~~~~~

.. autoapisummary::

   api.exam.router


.. py:data:: router

   

.. py:function:: exam_create(payload: api.models.BaseExam) -> api.models.ExamOut
   :async:

   Create exam endpoint.

   Parameters
   ----------
   payload
       Exam pydantic input model.

   Returns
   -------
       Exam pydantic output moddel.

   Raises
   ------
   HTTPException
       404: Creation unsuccessful


.. py:function:: exam_get(exam_id: int) -> api.models.ExamOut
   :async:

   Get exam endpoint.

   Parameters
   ----------
   exam_id
       Id of requested exam entry

   Returns
   -------
       Exam pydantic output model.

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: exam_get_all(patient_id: int) -> list[api.models.ExamOut]
   :async:

   Get all exams of a patient endpoint.

   Parameters
   ----------
   patient_id
       Id of parent

   Returns
   -------
       List of exam pydantic output models


.. py:function:: exam_delete(exam_id: int) -> None
   :async:

   Delete exam by id.

   Parameters
   ----------
   exam_id
       Id of the exam to be deleted

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: exam_update(exam_id: int, payload: api.models.BaseExam) -> api.models.ExamOut
   :async:

   Update exam.

   Parameters
   ----------
   exam_id
       Id of the exam to be updated
   payload
       Exam pydantic input model

   Returns
   -------
       Exam pydantic output model

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: procedure_create(payload: api.models.ProcedureIn) -> api.models.ProcedureOut
   :async:

   Procedure post endpoint.

   Parameters
   ----------
   payload
       Pydantic input model

   Returns
   -------
       Pydantic output model

   Raises
   ------
   HTTPException
       404: Creation not succesful


.. py:function:: procedure_get(procedure_id: int) -> api.models.ProcedureOut
   :async:

   Procedure get endpoint.

   Parameters
   ----------
   procedure_id
       Id of entry to return

   Returns
   -------
       Pydantic output model

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: procedure_get_all(exam_id: int) -> list[api.models.ProcedureOut]
   :async:

   Get all procedures of a parent endpoint.

   Parameters
   ----------
   exam_id
       Id of the parent object

   Returns
   -------
       List of pydantic output models


.. py:function:: procedure_delete(procedure_id: int) -> None
   :async:

   Delete procedure endpoint.

   Parameters
   ----------
   procedure_id
       Id of entry to be deleted

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: proceedure_update(procedure_id: int, payload: api.models.ProcedureIn) -> api.models.ProcedureOut
   :async:

   Update procedure endpoint.

   Parameters
   ----------
   procedure_id
       Id of procedure to be updated
   payload
       Pydantic input model

   Returns
   -------
       Pydantic output model

   Raises
   ------
   HTTPException
       404: Entry not found


.. py:function:: job_create(payload: api.models.BaseJob) -> api.models.JobOut
   :async:

   Create new job endpoint.

   Parameters
   ----------
   payload
       Job pydantic input model

   Returns
   -------
       Job pydantic output model

   Raises
   ------
   HTTPException
       404: Creation unsuccessful


.. py:function:: job_get(job_id: int) -> api.models.JobOut
   :async:

   Get job endpoint.

   Parameters
   ----------
   job_id
       Id of the job to be returned

   Returns
   -------
       Job pydantic output model

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: job_get_all(procedure_id: int) -> list[api.models.JobOut]
   :async:

   Get all jobs of a procedure endpoint.

   Parameters
   ----------
   procedure_id
       Id of parent procedure

   Returns
   -------
       List of job pydantic output model


.. py:function:: job_delete(job_id: int) -> None
   :async:

   Delete job endpoint.

   Parameters
   ----------
   job_id
       Id of the job to be deleted

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: job_update(job_id: int, payload: api.models.BaseJob) -> api.models.JobOut
   :async:

   Update job endpoint.

   Parameters
   ----------
   job_id
       Id of the job to be updated
   payload
       Job pydantic indput model

   Returns
   -------
       Job pydantic output model

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: record_create(payload: api.models.RecordIn) -> api.models.RecordOut
   :async:

   Create record endpoint.

   Parameters
   ----------
   payload
       Record pydantic input model

   Returns
   -------
       Record pydantic output model

   Raises
   ------
   HTTPException
       404: Creation unsuccessful


.. py:function:: update_record(record_id: int, payload: dict)
   :async:

   Update existing record.

   Parameters
   ----------
   record_id
       Id of the record to be updated
   payload
       Record pydantic input model

   Returns
   -------
       Record pydantic output model

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: record_get(record_id: int) -> api.models.RecordOut
   :async:

   Get single record endpoint.

   Parameters
   ----------
   record_id
       Id of the record to return

   Returns
   -------
       Record pydantic output model

   Raises
   ------
   HTTPException
       404: Not found


.. py:function:: record_get_all(job_id: int) -> list[api.models.RecordOut]
   :async:

   Get all records of a job endpoint.

   Parameters
   ----------
   job_id
       Id of parental job

   Returns
   -------
       List of record pydantic output model


.. py:function:: record_delete(record_id: int) -> None
   :async:

   Delete record endpoint.

   Parameters
   ----------
   record_id
       Id of the record to be deleted

   Raises
   ------
   HTTPException
       404: Not found


