:py:mod:`api.devices`
=====================

.. py:module:: api.devices

.. autoapi-nested-parse::

   Device api endpoints.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   api.devices.readiness
   api.devices.get_devices
   api.devices.get_device_ip_address
   api.devices.get_device
   api.devices.get_device_status
   api.devices.delete_device
   api.devices.websocket_endpoint



Attributes
~~~~~~~~~~

.. autoapisummary::

   api.devices.router
   api.devices.active_connections
   api.devices.dict_id_websocket


.. py:data:: router

   

.. py:data:: active_connections
   :type: list[fastapi.WebSocket]
   :value: []

   

.. py:data:: dict_id_websocket

   

.. py:function:: readiness() -> dict
   :async:

   Readiness health endpoint.

   Returns
   -------
       Status dictionary


.. py:function:: get_devices() -> list[api.models.DeviceOut]
   :async:

   Retrieve the list of registered devices.

   Returns
   -------
       List[Device]: The list of registered devices.


.. py:function:: get_device_ip_address(device_id: str)
   :async:

   Retrieve the IP address of a specific device.

   Args
   -------
       device_id (str): The ID of the device.

   Returns
   -------
       dict: The response containing the IP address of the device.


.. py:function:: get_device(device_id: str)
   :async:

   Retrieve a specific device.

   Args
   -------
       device_id (str): The ID of the device.

   Returns
   -------
       dict: The response containing the information about the device


.. py:function:: get_device_status(device_id: str)
   :async:

   Retrieve the status of a specific device.

   Args
   -------
       device_id (str): The ID of the device.

   Returns
   -------
       dict: The response containing the status of the device.


.. py:function:: delete_device(device_id: str)
   :async:

   Delete a device.

   Args
   -------
       device_id (str): The ID of the device.

   Returns
   -------
       dict: The response indicating the success or failure of the deletion.


.. py:function:: websocket_endpoint(websocket: fastapi.WebSocket)
   :async:

   Websocket endpoint for device communication.

   Args
   ----
       websocket (WebSocket): The WebSocket connection object.


