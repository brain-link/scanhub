workflow-manager.app.api.workflow
=================================

.. py:module:: workflow-manager.app.api.workflow

.. autoapi-nested-parse::

   Workflow manager endpoints.



Attributes
----------

.. autoapisummary::

   workflow-manager.app.api.workflow.router
   workflow-manager.app.api.workflow.SEQUENCE_MANAGER_URI
   workflow-manager.app.api.workflow.EXAM_MANAGER_URI
   workflow-manager.app.api.workflow.producer
   workflow-manager.app.api.workflow.workflows
   workflow-manager.app.api.workflow.orchestration_engine


Functions
---------

.. autoapisummary::

   workflow-manager.app.api.workflow.trigger_workflow
   workflow-manager.app.api.workflow.process
   workflow-manager.app.api.workflow.handle_device_task
   workflow-manager.app.api.workflow.handle_processing_task
   workflow-manager.app.api.workflow.upload_result


Module Contents
---------------

.. py:data:: router

.. py:data:: SEQUENCE_MANAGER_URI
   :value: 'host.docker.internal:8003'


.. py:data:: EXAM_MANAGER_URI
   :value: 'host.docker.internal:8004'


.. py:data:: producer

.. py:data:: workflows
   :type:  Dict[str, Dict[str, Any]]

.. py:data:: orchestration_engine

.. py:function:: trigger_workflow(workflow_id: str)
   :async:


.. py:function:: process(workflow_id: uuid.UUID | str) -> dict[str, str]
   :async:


   Process a workflow.

   Parameters
   ----------
   workflow_id
       UUID of the workflow to process

   Returns
   -------
       Workflow process response


.. py:function:: handle_device_task(task: scanhub_libraries.models.TaskOut)
   :async:


   Handle a device task by creating a scan job and starting the scan.


.. py:function:: handle_processing_task(task: scanhub_libraries.models.TaskOut)
   :async:


   Handle a processing task by triggering the appropriate orchestration engine.


.. py:function:: upload_result(workflow_id: str, file: fastapi.UploadFile = File(...)) -> dict[str, str]
   :async:


   Upload workflow result.

   Parameters
   ----------
   workflow_id
       Id of the workflow, which is processed by workflow
   file, optional
       Data upload, e.g. reconstruction result, by default File(...)

   Returns
   -------
       Notification


