device-manager.app.main
=======================

.. py:module:: device-manager.app.main

.. autoapi-nested-parse::

   Main file for the device manager service.



Attributes
----------

.. autoapisummary::

   device-manager.app.main.app
   device-manager.app.main.origins


Functions
---------

.. autoapisummary::

   device-manager.app.main.lifespan
   device-manager.app.main.custom_http_exception_handler
   device-manager.app.main.validation_exception_handler
   device-manager.app.main.readiness


Module Contents
---------------

.. py:function:: lifespan(app: fastapi.FastAPI)
   :async:


   Define fastapi app lifespan.


.. py:data:: app

.. py:data:: origins
   :value: ['http://localhost:8080', 'https://localhost:8443']


.. py:function:: custom_http_exception_handler(request: fastapi.Request, exc: starlette.exceptions.HTTPException) -> fastapi.Response
   :async:


   Add logging for http exceptions.

   https://fastapi.tiangolo.com/tutorial/handling-errors/#reuse-fastapis-exception-handlers


.. py:function:: validation_exception_handler(request: fastapi.Request, exc: fastapi.exceptions.RequestValidationError) -> fastapi.Response
   :async:


   Add logging for FastAPI's automatic input validation exceptions.

   https://fastapi.tiangolo.com/tutorial/handling-errors/#reuse-fastapis-exception-handlers


.. py:function:: readiness() -> dict
   :async:


   Readiness health endpoint.

   Inspects SQLAlchemy engine and checks if the device table exists.


