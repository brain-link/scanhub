name: 'static-tests'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  linting:
    name: 'Linting patient-manager'
    runs-on: ubuntu-latest

    env:
      working-directory: ./patient-manager

    strategy:
      matrix:
        python-version: ["3.10"]
        
    continue-on-error: True
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry
          
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Cache poetry dependencies
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      
      - name: Check cached dependencies
        working-directory: ${{env.working-directory}}
        run: poetry install --no-interaction --with lint --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Poetry install
        working-directory: ${{env.working-directory}}
        run: poetry install --no-interaction --with lint

      - name: Run pylint
        working-directory: ${{env.working-directory}}
        run: poetry run pylint app/
          
      - name: Run flake8
        working-directory: ${{env.working-directory}}
        run: poetry run flake8 app/
        
      - name: Run mypy
        working-directory: ${{env.working-directory}}
        run: poetry run mypy app/
          
      - name: Run pydocstyle
        working-directory: ${{env.working-directory}}
        run: poetry run pydocstyle app
