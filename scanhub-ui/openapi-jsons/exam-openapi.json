{"openapi":"3.0.2","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/api/v1/exam/health/readiness":{"get":{"tags":["health"],"summary":"Readiness","description":"Readiness health endpoint.\n\nReturns\n-------\n    Status dictionary\n\nRaises\n------\nHTTPException\n    500: Any of the exam-tree tables does not exist","operationId":"readiness_api_v1_exam_health_readiness_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/api/v1/exam/dicom/{result_id}":{"get":{"tags":["results"],"summary":"Get Dicom","description":"Get DICOM file of a result.\n\nThis endpoint in implemented in main without the result_router to omit the user authentification.\nThe frontend uses cornerstone to load the image, which would need to know, how to authenticate with the backend.\nThis is not to be done. TODO fix it!\n\nParameters\n----------\nresult_id\n    UUID of the result with the dicom.\n\nReturns\n-------\n    DICOM file response\n\nRaises\n------\nHTTPException\n    Throws exception if result ID is unknown\nHTTPException\n    Throws exception if DICOM file does not exist","operationId":"get_dicom_api_v1_exam_dicom__result_id__get","parameters":[{"required":true,"schema":{"title":"Result Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"result_id","in":"path"}],"responses":{"200":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["results"],"summary":"Upload Dicom","description":"Upload a DICOM file to a result.\n\nParameters\n----------\nresult_id\n    UUID of the result\nfile\n    Dicom file\nuser\n    User for authentification\n\nRaises\n------\nHTTPException\n    Throws error if ID of the result is unknown","operationId":"upload_dicom_api_v1_exam_dicom__result_id__post","parameters":[{"required":true,"schema":{"title":"Result Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"result_id","in":"path"}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_dicom_api_v1_exam_dicom__result_id__post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/new":{"post":{"tags":["exams"],"summary":"Create Exam","description":"Create a new exam.\n\nParameters\n----------\npayload\n    Exam pydantic input model.\n\nReturns\n-------\n    Exam pydantic output moddel.\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_exam_api_v1_exam_new_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseExam"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExamOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/":{"post":{"tags":["exams"],"summary":"Create Exam From Template","description":"Create a new exam from template.\n\nParameters\n----------\npayload\n    The potentially modified exam to create.\ntemplate_id\n    ID of the template, the exam is created from\n\nReturns\n-------\n    Exam pydantic output model.\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_exam_from_template_api_v1_exam__post","parameters":[{"required":true,"schema":{"title":"Template Id","type":"string","format":"uuid"},"name":"template_id","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseExam"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExamOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/{exam_id}":{"get":{"tags":["exams"],"summary":"Get Exam","description":"Get exam endpoint.\n\nParameters\n----------\nexam_id\n    Id of requested exam entry\n\nReturns\n-------\n    Exam pydantic output model.\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"get_exam_api_v1_exam__exam_id__get","parameters":[{"required":true,"schema":{"title":"Exam Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"exam_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExamOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"put":{"tags":["exams"],"summary":"Update Exam","description":"Update an existing exam.\n\nParameters\n----------\nexam_id\n    Id of the exam to be updated\npayload\n    Exam pydantic input model\n\nReturns\n-------\n    Exam pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"update_exam_api_v1_exam__exam_id__put","parameters":[{"required":true,"schema":{"title":"Exam Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"exam_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseExam"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExamOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"delete":{"tags":["exams"],"summary":"Exam Delete","description":"Delete an exam by id. Cascade deletes the associated workflow and tasks.\n\nParameters\n----------\nexam_id\n    Id of the exam to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"exam_delete_api_v1_exam__exam_id__delete","parameters":[{"required":true,"schema":{"title":"Exam Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"exam_id","in":"path"}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/all/{patient_id}":{"get":{"tags":["exams"],"summary":"Get All Patient Exams","description":"Get all exams of a certain patient.\n\nParameters\n----------\npatient_id\n    Id of parent\n\nReturns\n-------\n    List of exam pydantic output models","operationId":"get_all_patient_exams_api_v1_exam_all__patient_id__get","parameters":[{"required":true,"schema":{"title":"Patient Id","type":"string","format":"uuid"},"name":"patient_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Patient Exams Api V1 Exam All  Patient Id  Get","type":"array","items":{"$ref":"#/components/schemas/ExamOut"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/templates/all":{"get":{"tags":["exams"],"summary":"Get All Exam Templates","description":"Get all exam templates.\n\nReturns\n-------\n    List of exam pydantic output models","operationId":"get_all_exam_templates_api_v1_exam_templates_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Exam Templates Api V1 Exam Templates All Get","type":"array","items":{"$ref":"#/components/schemas/ExamOut"}}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/workflow/new":{"post":{"tags":["workflows"],"summary":"Create Workflow","description":"Create new workflow.\n\nParameters\n----------\npayload\n    Workflow pydantic input model\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_workflow_api_v1_exam_workflow_new_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseWorkflow"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/workflow":{"post":{"tags":["workflows"],"summary":"Create Workflow From Template","description":"Create new workflow from template.\n\nParameters\n----------\nexam_id\n    Id of the exam, the workflow is related to\ntemplate_id\n    ID of the template, the workflow is created from\nnew_workflow_is_template\n    set the is_template property of the new workflow and its tasks\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_workflow_from_template_api_v1_exam_workflow_post","parameters":[{"required":true,"schema":{"title":"Exam Id","type":"string","format":"uuid"},"name":"exam_id","in":"query"},{"required":true,"schema":{"title":"Template Id","type":"string","format":"uuid"},"name":"template_id","in":"query"},{"required":true,"schema":{"title":"New Workflow Is Template","type":"boolean"},"name":"new_workflow_is_template","in":"query"}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/workflow/{workflow_id}":{"get":{"tags":["workflows"],"summary":"Get Workflow","description":"Get a workflow.\n\nParameters\n----------\nworkflow_id\n    Id of the workflow to be returned\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"get_workflow_api_v1_exam_workflow__workflow_id__get","parameters":[{"required":true,"schema":{"title":"Workflow Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"workflow_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"put":{"tags":["workflows"],"summary":"Update Workflow","description":"Update an existing workflow.\n\nParameters\n----------\nworkflow_id\n    Id of the workflow to be updated\npayload\n    Workflow pydantic indput model\n\nReturns\n-------\n    Workflow pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"update_workflow_api_v1_exam_workflow__workflow_id__put","parameters":[{"required":true,"schema":{"title":"Workflow Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"workflow_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseWorkflow"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"delete":{"tags":["workflows"],"summary":"Delete Workflow","description":"Delete a workflow. Cascade delete the associated tasks.\n\nParameters\n----------\nworkflow_id\n    Id of the workflow to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"delete_workflow_api_v1_exam_workflow__workflow_id__delete","parameters":[{"required":true,"schema":{"title":"Workflow Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"workflow_id","in":"path"}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/workflow/all/{exam_id}":{"get":{"tags":["workflows"],"summary":"Get All Exam Workflows","description":"Get all existing workflows of a certain exam.\n\nParameters\n----------\nexam_id\n    Id of parent exam\n\nReturns\n-------\n    List of workflow pydantic output model","operationId":"get_all_exam_workflows_api_v1_exam_workflow_all__exam_id__get","parameters":[{"required":true,"schema":{"title":"Exam Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"exam_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Exam Workflows Api V1 Exam Workflow All  Exam Id  Get","type":"array","items":{"$ref":"#/components/schemas/WorkflowOut"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/workflow/templates/all":{"get":{"tags":["workflows"],"summary":"Get All Workflow Templates","description":"Get all workflow templates.\n\nReturns\n-------\n    List of workflow pydantic output model","operationId":"get_all_workflow_templates_api_v1_exam_workflow_templates_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Workflow Templates Api V1 Exam Workflow Templates All Get","type":"array","items":{"$ref":"#/components/schemas/WorkflowOut"}}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/task/new":{"post":{"tags":["tasks"],"summary":"Create Task","description":"Create a new task.\n\nParameters\n----------\npayload\n    Task pydantic input model\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_task_api_v1_exam_task_new_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseTask"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/task":{"post":{"tags":["tasks"],"summary":"Create Task From Template","description":"Create a new task from template.\n\nParameters\n----------\nworkflow_id\n    ID of the workflow, the task is related to\ntemplate_id\n    ID of the template, the task is created from\nnew_task_is_template\n    set the is_template property on the new task\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_task_from_template_api_v1_exam_task_post","parameters":[{"required":true,"schema":{"title":"Workflow Id","type":"string","format":"uuid"},"name":"workflow_id","in":"query"},{"required":true,"schema":{"title":"Template Id","type":"string","format":"uuid"},"name":"template_id","in":"query"},{"required":true,"schema":{"title":"New Task Is Template","type":"boolean"},"name":"new_task_is_template","in":"query"}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/task/{task_id}":{"get":{"tags":["tasks"],"summary":"Get Task","description":"Get an existing task.\n\nParameters\n----------\ntask_id\n    Id of the task to be returned\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"get_task_api_v1_exam_task__task_id__get","parameters":[{"required":true,"schema":{"title":"Task Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"task_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"put":{"tags":["tasks"],"summary":"Update Task","description":"Update an existing task.\n\nParameters\n----------\ntask_id\n    Id of the workflow to be updated\npayload\n    Task pydantic base model\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"update_task_api_v1_exam_task__task_id__put","parameters":[{"required":true,"schema":{"title":"Task Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"task_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseTask"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"delete":{"tags":["tasks"],"summary":"Delete Task","description":"Delete a task.\n\nParameters\n----------\ntask_id\n    Id of the task to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"delete_task_api_v1_exam_task__task_id__delete","parameters":[{"required":true,"schema":{"title":"Task Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"task_id","in":"path"}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/task/all/{workflow_id}":{"get":{"tags":["tasks"],"summary":"Get All Workflow Tasks","description":"Get all existing tasks of a certain workflow.\n\nParameters\n----------\nworkflow_id\n    Id of parental workflow\n\nReturns\n-------\n    List of task pydantic output model","operationId":"get_all_workflow_tasks_api_v1_exam_task_all__workflow_id__get","parameters":[{"required":true,"schema":{"title":"Workflow Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"workflow_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Workflow Tasks Api V1 Exam Task All  Workflow Id  Get","type":"array","items":{"$ref":"#/components/schemas/TaskOut"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/task/templates/all":{"get":{"tags":["tasks"],"summary":"Get All Task Templates","description":"Get all existing task templates.\n\nReturns\n-------\n    List of task pydantic output model","operationId":"get_all_task_templates_api_v1_exam_task_templates_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Task Templates Api V1 Exam Task Templates All Get","type":"array","items":{"$ref":"#/components/schemas/TaskOut"}}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/result":{"post":{"tags":["results"],"summary":"Create Result","description":"Create a task result.\n\nParameters\n----------\npayload\n    Result pydantic input model\n\nReturns\n-------\n    Result pydantic output model\n\nRaises\n------\nHTTPException\n    404: Creation unsuccessful","operationId":"create_result_api_v1_exam_result_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResult"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/result/{result_id}":{"get":{"tags":["results"],"summary":"Get Result","description":"Get an existing result.\n\nParameters\n----------\nresult_id\n    Id of the result to be returned\n\nReturns\n-------\n    Result pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"get_result_api_v1_exam_result__result_id__get","parameters":[{"required":true,"schema":{"title":"Result Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"result_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"put":{"tags":["results"],"summary":"Update Result","description":"Update an existing result.\n\nParameters\n----------\nresult_id\n    Id of the result to be updated\npayload\n    Result pydantic base model/dict\n    If this is the pydantic ResultBase model, only fields in the base model can be updated.\n\nReturns\n-------\n    Task pydantic output model\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"update_result_api_v1_exam_result__result_id__put","parameters":[{"required":true,"schema":{"title":"Result Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"result_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseResult"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResultOut"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]},"delete":{"tags":["results"],"summary":"Delete Result","description":"Delete a task.\n\nParameters\n----------\ntask_id\n    Id of the task to be deleted\n\nRaises\n------\nHTTPException\n    404: Not found","operationId":"delete_result_api_v1_exam_result__result_id__delete","parameters":[{"required":true,"schema":{"title":"Result Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"result_id","in":"path"}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/v1/exam/result/all/{task_id}":{"get":{"tags":["results"],"summary":"Get All Task Results","description":"Get all existing results of a certain task.\n\nParameters\n----------\ntask_id\n    Id of parental task\n\nReturns\n-------\n    List of task pydantic output model","operationId":"get_all_task_results_api_v1_exam_result_all__task_id__get","parameters":[{"required":true,"schema":{"title":"Task Id","anyOf":[{"type":"string","format":"uuid"},{"type":"string"}]},"name":"task_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get All Task Results Api V1 Exam Result All  Task Id  Get","type":"array","items":{"$ref":"#/components/schemas/ResultOut"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}}},"components":{"schemas":{"BaseExam":{"title":"BaseExam","required":["name","description","status","is_template"],"type":"object","properties":{"patient_id":{"title":"Patient Id","type":"string","format":"uuid"},"name":{"title":"Name","type":"string"},"description":{"title":"Description","type":"string"},"indication":{"title":"Indication","type":"string"},"patient_height_cm":{"title":"Patient Height Cm","type":"integer"},"patient_weight_kg":{"title":"Patient Weight Kg","type":"integer"},"comment":{"title":"Comment","type":"string"},"status":{"$ref":"#/components/schemas/ItemStatus"},"is_template":{"title":"Is Template","type":"boolean"}},"description":"Exam base model."},"BaseResult":{"title":"BaseResult","required":["type"],"type":"object","properties":{"task_id":{"title":"Task Id","type":"string","format":"uuid"},"type":{"$ref":"#/components/schemas/ResultType"},"status":{"allOf":[{"$ref":"#/components/schemas/ItemStatus"}],"default":"NEW"},"directory":{"title":"Directory","type":"string","default":""},"filename":{"title":"Filename","type":"string","default":""},"progress":{"title":"Progress","type":"number","default":0.0}},"description":"Result model."},"BaseTask":{"title":"BaseTask","required":["name","description","type","args","artifacts","destinations","status","progress","is_template"],"type":"object","properties":{"workflow_id":{"title":"Workflow Id","type":"string","format":"uuid"},"name":{"title":"Name","type":"string"},"description":{"title":"Description","type":"string"},"comment":{"title":"Comment","type":"string"},"type":{"$ref":"#/components/schemas/TaskType"},"args":{"title":"Args","type":"object","additionalProperties":{"type":"string"}},"artifacts":{"title":"Artifacts","type":"object","additionalProperties":{"type":"string"}},"destinations":{"title":"Destinations","type":"object","additionalProperties":{"type":"string"}},"status":{"$ref":"#/components/schemas/ItemStatus"},"progress":{"title":"Progress","type":"integer"},"is_template":{"title":"Is Template","type":"boolean"}},"description":"Task model."},"BaseWorkflow":{"title":"BaseWorkflow","required":["name","description","status","is_template"],"type":"object","properties":{"exam_id":{"title":"Exam Id","type":"string","format":"uuid"},"name":{"title":"Name","type":"string"},"description":{"title":"Description","type":"string"},"comment":{"title":"Comment","type":"string"},"status":{"$ref":"#/components/schemas/ItemStatus"},"is_template":{"title":"Is Template","type":"boolean"}},"description":"Workflow base model."},"Body_upload_dicom_api_v1_exam_dicom__result_id__post":{"title":"Body_upload_dicom_api_v1_exam_dicom__result_id__post","required":["file"],"type":"object","properties":{"file":{"title":"File","type":"string","format":"binary"}}},"ExamOut":{"title":"ExamOut","required":["name","description","status","is_template","id","creator","datetime_created","workflows"],"type":"object","properties":{"patient_id":{"title":"Patient Id","type":"string","format":"uuid"},"name":{"title":"Name","type":"string"},"description":{"title":"Description","type":"string"},"indication":{"title":"Indication","type":"string"},"patient_height_cm":{"title":"Patient Height Cm","type":"integer"},"patient_weight_kg":{"title":"Patient Weight Kg","type":"integer"},"comment":{"title":"Comment","type":"string"},"status":{"$ref":"#/components/schemas/ItemStatus"},"is_template":{"title":"Is Template","type":"boolean"},"id":{"title":"Id","type":"string","format":"uuid"},"creator":{"title":"Creator","type":"string"},"datetime_created":{"title":"Datetime Created","type":"string","format":"date-time"},"datetime_updated":{"title":"Datetime Updated","type":"string","format":"date-time"},"workflows":{"title":"Workflows","type":"array","items":{"$ref":"#/components/schemas/WorkflowOut"}}},"description":"Exam output model."},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"ItemStatus":{"title":"ItemStatus","enum":["NEW","UPDATED","STARTED","FINISHED","DELETED","INPROGRESS"],"type":"string","description":"Task status enum."},"ResultOut":{"title":"ResultOut","required":["type","id","datetime_created"],"type":"object","properties":{"task_id":{"title":"Task Id","type":"string","format":"uuid"},"type":{"$ref":"#/components/schemas/ResultType"},"status":{"allOf":[{"$ref":"#/components/schemas/ItemStatus"}],"default":"NEW"},"directory":{"title":"Directory","type":"string","default":""},"filename":{"title":"Filename","type":"string","default":""},"progress":{"title":"Progress","type":"number","default":0.0},"id":{"title":"Id","type":"string","format":"uuid"},"datetime_created":{"title":"Datetime Created","type":"string","format":"date-time"}},"description":"Result output model."},"ResultType":{"title":"ResultType","enum":["DICOM","MRD","CALIBRATION"],"type":"string","description":"Result type enum."},"TaskOut":{"title":"TaskOut","required":["name","description","type","args","artifacts","destinations","status","progress","is_template","id","creator","datetime_created","results"],"type":"object","properties":{"workflow_id":{"title":"Workflow Id","type":"string","format":"uuid"},"name":{"title":"Name","type":"string"},"description":{"title":"Description","type":"string"},"comment":{"title":"Comment","type":"string"},"type":{"$ref":"#/components/schemas/TaskType"},"args":{"title":"Args","type":"object","additionalProperties":{"type":"string"}},"artifacts":{"title":"Artifacts","type":"object","additionalProperties":{"type":"string"}},"destinations":{"title":"Destinations","type":"object","additionalProperties":{"type":"string"}},"status":{"$ref":"#/components/schemas/ItemStatus"},"progress":{"title":"Progress","type":"integer"},"is_template":{"title":"Is Template","type":"boolean"},"id":{"title":"Id","type":"string","format":"uuid"},"creator":{"title":"Creator","type":"string"},"datetime_created":{"title":"Datetime Created","type":"string","format":"date-time"},"datetime_updated":{"title":"Datetime Updated","type":"string","format":"date-time"},"results":{"title":"Results","type":"array","items":{"$ref":"#/components/schemas/ResultOut"}}},"description":"Task output model."},"TaskType":{"title":"TaskType","enum":["PROCESSING_TASK","DEVICE_TASK_SIMULATOR","DEVICE_TASK_SDK","RECONSTRUCTION_TASK"],"type":"string","description":"Task type enum."},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}},"WorkflowOut":{"title":"WorkflowOut","required":["name","description","status","is_template","id","creator","datetime_created","tasks"],"type":"object","properties":{"exam_id":{"title":"Exam Id","type":"string","format":"uuid"},"name":{"title":"Name","type":"string"},"description":{"title":"Description","type":"string"},"comment":{"title":"Comment","type":"string"},"status":{"$ref":"#/components/schemas/ItemStatus"},"is_template":{"title":"Is Template","type":"boolean"},"id":{"title":"Id","type":"string","format":"uuid"},"creator":{"title":"Creator","type":"string"},"datetime_created":{"title":"Datetime Created","type":"string","format":"date-time"},"datetime_updated":{"title":"Datetime Updated","type":"string","format":"date-time"},"tasks":{"title":"Tasks","type":"array","items":{"$ref":"#/components/schemas/TaskOut"}}},"description":"Workflow output model."}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"login"}}}}}}