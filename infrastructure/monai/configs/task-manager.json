{
  "MonaiDeployAuthentication": {
    "BypassAuthentication": true
  },
  "WorkloadManagerDatabase": {
    "ConnectionString": "mongodb://root:rootpassword@mongodb:27017",
    "DatabaseName": "WorkloadManager"
  },
  "WorkflowManager": {
    "taskTimeoutMinutes": 60,
    "endpointSettings": {
      "defaultPageSize": 10,
      "maxPageSize": 1000000
    },
    "TaskManager": {
      "concurrency": 1,
      "plug-ins": {
        "docker": "Monai.Deploy.WorkflowManager.TaskManager.Docker.DockerPlugin, Monai.Deploy.WorkflowManager.TaskManager.Docker"
      },
      "meta-data": {
      },
    },
    "messaging": {
      "retries": {
        "retryDelays": "5"
      },
      "topics": {
        "workflowRequest": "md.workflow.request",
        "exportComplete": "md.export.complete",
        "exportRequestPrefix": "md.export.request",
        "taskCallback": "md.tasks.callback"
      },
      "dicomAgents": {
        "dicomWebAgentName": "monaidicomweb",
        "scuAgentName": "monaiscu"
      },
      "publisherServiceAssemblyName": "Monai.Deploy.Messaging.RabbitMQ.RabbitMQMessagePublisherService, Monai.Deploy.Messaging.RabbitMQ",
      "publisherSettings": {
        "endpoint": "rabbitmq",
        "username": "admin",
        "password": "admin",
        "virtualHost": "monaideploy",
        "exchange": "monaideploy",
        "deadLetterExchange": "deadLetterExchange",
        "deliveryLimit": "5",
        "requeueDelay": "0"
      },
      "subscriberServiceAssemblyName": "Monai.Deploy.Messaging.RabbitMQ.RabbitMQMessageSubscriberService, Monai.Deploy.Messaging.RabbitMQ",
      "subscriberSettings": {
        "endpoint": "rabbitmq",
        "username": "admin",
        "password": "admin",
        "virtualHost": "monaideploy",
        "exchange": "monaideploy",
        "deadLetterExchange": "monaideploy-dead-letter",
        "exportRequestQueue": "export_tasks",
        "deliveryLimit": 3,
        "requeueDelay": 30
      }
    },
    "storage": {
      "serviceAssemblyName": "Monai.Deploy.Storage.MinIO.MinIoStorageService, Monai.Deploy.Storage.MinIO",
      "settings": {
        "endpoint": "minio:9000",
        "accessKey": "minioadmin",
        "accessToken": "minioadmin",
        "region": "eu-west-2",
        "bucket": "monaideploy",
        "securedConnection": false,
        "executableLocation": "mc",
        "serviceName": "test"
      }
    }
  },
   "Logging": {
    "LogLevel": {
      "Default": "Information",
      "System": "Warning",
      "Microsoft": "Warning",
      "Microsoft.EntityFrameworkCore": "Warning",
      "Microsoft.Hosting.Lifetime": "Information",
      "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker": "Error",
      "Monai": "Debug"
    },
    "Console": {
      "FormatterOptions": {
        "ColorBehavior": "Enabled",
        "IncludeScopes": true,
        "SingleLine": false,
        "TimestampFormat": " HH:mm:ss ",
        "UseUtcTimestamp": true
      }
    }
  },
  "Serilog": {
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ],
    "Properties": {
      "enviroment": "Production",
      "serviceName": "MTM"
    },
    "WriteTo": [
      {
        "Name": "File",
        "Args": {
          "path": "logs/MTM-.log",
          "rollingInterval": "Day",
          "rollOnFileSizeLimit": true,
          "fileSizeLimitBytes": "10485760",
          "retainedFileCountLimit": 30,
          "formatter": "Serilog.Formatting.Json.JsonFormatter, Serilog"
        }
      },
      {
        "Name": "Http",
        "Args": {
          "requestUri": "http://logstash:50000",
          "queueLimitBytes": null
        }
      }
    ]
  }
}
