version: "3"
services:

  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    depends_on:
      - patient-manager
    volumes:
      - ./frontend/src:/app/src
    ports:
      - 3000:3000

  patient-manager:
    container_name: patient-manager
    image: sh-patient-manager
    restart: unless-stopped
    build: ./patient-manager
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8100
    volumes:
    - ./patient-manager/app:/app/
    ports:
      - 8100:8100
    environment:
      - DB_URI=postgresql://brainlink:data@patient-database/patients-data
      - DB_URI_ASYNC=postgresql+asyncpg://brainlink:data@patient-database/patients-data
    depends_on:
      patient-database:
        condition: service_healthy

  patient-database:
    container_name: db-patients
    image: postgres:15.2-bullseye
    restart: always
    volumes:
      - postgres_data_patient:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: brainlink
      POSTGRES_DB: patients-data
      POSTGRES_PASSWORD: data
    ports:
      - "5432:5432"
    healthcheck:  
      # init-db container is started, after health check passed
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s 

volumes:
  postgres_data_patient: