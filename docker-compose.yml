
version: "3"
services:
  couchdb:
    image: docker.io/bitnami/couchdb:3
    container_name: couchdb
    environment:
      - COUCHDB_PASSWORD=couchdb
    ports:
      - '5984:5984'
      - '4369:4369'
      - '9100:9100'
    volumes:
      - couchdb_data:/bitnami/couchdb

 # KAFKA BROKER
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      # - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - backend

 # WHISK CONTROLLER
  controller:
    image: 'openwhisk/controller:nightly'
    container_name: controller



# WHISK INVOKER
  invoker:
    image: 'openwhisk/invoker:nightly'
    container_name: invoker


  # controller:
  #   restart: always
  #   container_name: ControllerService
  #   build: 
  #     context: ./ControllerService
  #     dockerfile: ./Dockerfile
  #   volumes:
  #   - ./ControllerService:/home/site/wwwroot
  #   ports:
  #     - 83:80
  #   networks:
  #     - backend

  # dicom:
  #   restart: always
  #   container_name: DICOMService
  #   build: 
  #     context: ./DICOMService
  #     dockerfile: ./Dockerfile
  #   volumes:
  #   - ./DICOMService:/home/site/wwwroot
  #   ports:
  #     - 82:80
  #   networks:
  #     - backend


networks:
  backend:
    driver: bridge

volumes:
  couchdb_data:
    driver: local
